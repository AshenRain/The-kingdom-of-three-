import javax.swing.*;
import java.util.Vector;

public class Info{

    // Vector fields = new Vector();
    // Vector fieldsCoordinates = new Vector(); 
    // Vector characters = new Vector();
    // Vector coordinates = new Vector();
    
    ArrayList<Field> fields = new ArrayList<Field>();
    ArrayList<int> fieldsCoordinates = new ArrayList<int>(); // хранит координаты полей, нужен только для старта при создании поля
    ArrayList<Character> fields = new ArrayList<Character>();
    

    Player N1 = new Player();
    Player N2 = new Player();
    Player N3 = new Player();

    

}



public class MathModule {


    // добавить экземпляр класса поле с наименованием home
    // добавить флажек для определения ходила фигура или нет в класс Character

    /// START
    void Start(Info Base){
        for (int i = 0; i<55; i++){
             Base.fields.add(Fabric_Field.createField());
             Base.fields.get(i).coordinate = Base.fieldsCoordinates[i];
             if (Base.fields.get(i).coordinate == 4114 || Base.fields.get(i).coordinate == 4411 || Base.fields.get(i).coordinate == 4444){
                Base.fields.get(i).type = 3; // Это Рудник
             }
             if else (Base.fields.get(i).coordinate == 1111 ||
                      Base.fields.get(i).coordinate == 1221 ||
                      Base.fields.get(i).coordinate == 1331 ||
                      Base.fields.get(i).coordinate == 1441 ||
                      
                      Base.fields.get(i).coordinate == 2134 ||
                      Base.fields.get(i).coordinate == 2233 ||
                      Base.fields.get(i).coordinate == 2332 ||
                      Base.fields.get(i).coordinate == 2431 ||
                      
                      Base.fields.get(i).coordinate == 3111 ||
                      Base.fields.get(i).coordinate == 3122 ||
                      Base.fields.get(i).coordinate == 3133 ||
                      Base.fields.get(i).coordinate == 3144 
             ){
                Base.fields.get(i).type = 1; // Это поле является королевством игрока
             }
             else{
                Base.fields.get(i).type = 2; // Это обычное поле
             }
             
 
           }
        
        
        
        
        
        
        // открытие окна игрока, который ходит
    }















    /// PLAYER COMMAND

    void PlayerMovement(Info Base)
    {
        // открывыется окно и печатается список фигур, которые не ходили
        // игрок выбирает юнита {запускается окно с выбором фигуры и игрок выбирает нужную)
        // после выбора запускается окно выбора дейстивий юнита (находится в классе character) c двумя метода
    }


    void PlayerKingdomSkill(Info Base, int skill) // скил при обороне замка
    {
        // на стадии концепции
    }

    void PlayerCallUnit(Info Base, int unit) // выбор юнита для призыва
    {
        // открывается окно выбора юнита для призыва
    }

    void PlayerEndMove(Info Base)
    {
        // перед передачей проверяется, остались ли фигуры, которые не подходили
        for(int i=0; i <= Base.characters.size(); i++){
            if(Base.characters.) // проверяется принадлежность фигуры к нужному игроку и ходила ли она
            {
                // выводиться диалоговое окно с сообщением о том что данная фигура ниходила,
                // на выбор предлогается кнопка которая октрывает окно действий для нанной фигуры
                // и окно с возможностью продолжить
            }
        }

    }

    /// CHARACTER COMMAND
    
    void CharacterMove(Info Base, Character figure, int nado) // передается код ячейки куда хочет перейти фигура
    {
        // проверка не занята ли ячейка
        // проверка соседняя ли это ячейка (3 формулы из теор. базиса.)
        // передвижение в нужную ячейку
        
        if((здесь должно быть поле отвечающее за очки движения)!=0 и (проверка занято ли указанное поле)){
            for (int i = 0; i < 55; i++){
                if (sosed(Base, figure.coordinate, nado))
                {
                    //если сработало значит перевести фигуры в эту клетку
                }
                Base.fields.get(i).coordinate 
            }
        }
        else
        {
            //уведмоляет пользователя что у фигуры не осталось очков передвижения
            //или о том что клетка не является соседней
        }
    }
    
    boolean sosed(Info Base,int coordinate, int nado){
        int c1,c2,S,k;
        k = 1000
        c1 = (int)coordinate/1000;
        c2 = (int)nado/1000;
        
        while (coordinate != 0)
        {
            coordinate %=k;
            nado %=k;
            k /=10;
            S += ((int)coordinate/k - (int)nado/k);
        }
        
        
        if (c1 != 4 and c1 == c2 )
        {
            if (S <= 2) return true;
            else return false;
        }
        else if (c1 != 4 and c2 == 4 or c1 == 4 and c2 != 4)
        {
            if (S <= 1) return true;
            else return false;
        }
        else if (c1 == 4 and c2 == 4)
        {
            if (S <= 1) return true;
            else return false;
        }
    }
    

    void CharacterAttack(Info Base, int field_code) // передается код ячейки куда хочет напасть фигура
    {
        // проверка есть ли кто-то в ячейке, и враг ли это
        // просчет получения урона
        // удаление юнитов, у которых закончились жизни
    }

    /// FIELD COMMAND

    // у поля нет комманд ;)
}
